// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/public_struct.proto

#ifndef PROTOBUF_proto_2fpublic_5fstruct_2eproto__INCLUDED
#define PROTOBUF_proto_2fpublic_5fstruct_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "proto/public_enum.pb.h"
// @@protoc_insertion_point(includes)

namespace pub {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_proto_2fpublic_5fstruct_2eproto();
void protobuf_AssignDesc_proto_2fpublic_5fstruct_2eproto();
void protobuf_ShutdownFile_proto_2fpublic_5fstruct_2eproto();

class PingReq;
class PongRsp;
class ErrorRsp;

// ===================================================================

class PingReq : public ::google::protobuf::Message {
 public:
  PingReq();
  virtual ~PingReq();

  PingReq(const PingReq& from);

  inline PingReq& operator=(const PingReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PingReq& default_instance();

  void Swap(PingReq* other);

  // implements Message ----------------------------------------------

  PingReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PingReq& from);
  void MergeFrom(const PingReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pub.PingReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_proto_2fpublic_5fstruct_2eproto();
  friend void protobuf_AssignDesc_proto_2fpublic_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_proto_2fpublic_5fstruct_2eproto();

  void InitAsDefaultInstance();
  static PingReq* default_instance_;
};
// -------------------------------------------------------------------

class PongRsp : public ::google::protobuf::Message {
 public:
  PongRsp();
  virtual ~PongRsp();

  PongRsp(const PongRsp& from);

  inline PongRsp& operator=(const PongRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PongRsp& default_instance();

  void Swap(PongRsp* other);

  // implements Message ----------------------------------------------

  PongRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PongRsp& from);
  void MergeFrom(const PongRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pub.PongRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_proto_2fpublic_5fstruct_2eproto();
  friend void protobuf_AssignDesc_proto_2fpublic_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_proto_2fpublic_5fstruct_2eproto();

  void InitAsDefaultInstance();
  static PongRsp* default_instance_;
};
// -------------------------------------------------------------------

class ErrorRsp : public ::google::protobuf::Message {
 public:
  ErrorRsp();
  virtual ~ErrorRsp();

  ErrorRsp(const ErrorRsp& from);

  inline ErrorRsp& operator=(const ErrorRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ErrorRsp& default_instance();

  void Swap(ErrorRsp* other);

  // implements Message ----------------------------------------------

  ErrorRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ErrorRsp& from);
  void MergeFrom(const ErrorRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pub.ErrorCode error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::pub::ErrorCode error_code() const;
  inline void set_error_code(::pub::ErrorCode value);

  // optional string what = 2;
  inline bool has_what() const;
  inline void clear_what();
  static const int kWhatFieldNumber = 2;
  inline const ::std::string& what() const;
  inline void set_what(const ::std::string& value);
  inline void set_what(const char* value);
  inline void set_what(const char* value, size_t size);
  inline ::std::string* mutable_what();
  inline ::std::string* release_what();
  inline void set_allocated_what(::std::string* what);

  // @@protoc_insertion_point(class_scope:pub.ErrorRsp)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();
  inline void set_has_what();
  inline void clear_has_what();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* what_;
  int error_code_;
  friend void  protobuf_AddDesc_proto_2fpublic_5fstruct_2eproto();
  friend void protobuf_AssignDesc_proto_2fpublic_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_proto_2fpublic_5fstruct_2eproto();

  void InitAsDefaultInstance();
  static ErrorRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// PingReq

// -------------------------------------------------------------------

// PongRsp

// -------------------------------------------------------------------

// ErrorRsp

// required .pub.ErrorCode error_code = 1;
inline bool ErrorRsp::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ErrorRsp::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ErrorRsp::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ErrorRsp::clear_error_code() {
  error_code_ = 10001;
  clear_has_error_code();
}
inline ::pub::ErrorCode ErrorRsp::error_code() const {
  // @@protoc_insertion_point(field_get:pub.ErrorRsp.error_code)
  return static_cast< ::pub::ErrorCode >(error_code_);
}
inline void ErrorRsp::set_error_code(::pub::ErrorCode value) {
  assert(::pub::ErrorCode_IsValid(value));
  set_has_error_code();
  error_code_ = value;
  // @@protoc_insertion_point(field_set:pub.ErrorRsp.error_code)
}

// optional string what = 2;
inline bool ErrorRsp::has_what() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ErrorRsp::set_has_what() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ErrorRsp::clear_has_what() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ErrorRsp::clear_what() {
  if (what_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    what_->clear();
  }
  clear_has_what();
}
inline const ::std::string& ErrorRsp::what() const {
  // @@protoc_insertion_point(field_get:pub.ErrorRsp.what)
  return *what_;
}
inline void ErrorRsp::set_what(const ::std::string& value) {
  set_has_what();
  if (what_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    what_ = new ::std::string;
  }
  what_->assign(value);
  // @@protoc_insertion_point(field_set:pub.ErrorRsp.what)
}
inline void ErrorRsp::set_what(const char* value) {
  set_has_what();
  if (what_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    what_ = new ::std::string;
  }
  what_->assign(value);
  // @@protoc_insertion_point(field_set_char:pub.ErrorRsp.what)
}
inline void ErrorRsp::set_what(const char* value, size_t size) {
  set_has_what();
  if (what_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    what_ = new ::std::string;
  }
  what_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pub.ErrorRsp.what)
}
inline ::std::string* ErrorRsp::mutable_what() {
  set_has_what();
  if (what_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    what_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:pub.ErrorRsp.what)
  return what_;
}
inline ::std::string* ErrorRsp::release_what() {
  clear_has_what();
  if (what_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = what_;
    what_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ErrorRsp::set_allocated_what(::std::string* what) {
  if (what_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete what_;
  }
  if (what) {
    set_has_what();
    what_ = what;
  } else {
    clear_has_what();
    what_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:pub.ErrorRsp.what)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pub

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_2fpublic_5fstruct_2eproto__INCLUDED
