// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/server_internal.proto

#ifndef PROTOBUF_proto_2fserver_5finternal_2eproto__INCLUDED
#define PROTOBUF_proto_2fserver_5finternal_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "proto/public_enum.pb.h"
// @@protoc_insertion_point(includes)

namespace svr {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_proto_2fserver_5finternal_2eproto();
void protobuf_AssignDesc_proto_2fserver_5finternal_2eproto();
void protobuf_ShutdownFile_proto_2fserver_5finternal_2eproto();

class LoginDBAgentReq;
class LoginDBAgentRsp;
class DBAgentInfoReq;
class DBAgentInfoRsp;
class QueryDBAgentReq;
class QueryDBAgentRsp;
class DBErrorRsp;
class DBAgentErrorRsp;
class ChildNode;
class LoginGWReq;
class LoginGWRsp;
class GWInfoReq;
class GWInfoRsp;
class ForwardReq;
class BroadcastReq;
class GWNotify;
class LinkerLoginReq;
class LinkerLoginRsp;
class ReportLinkerReq;
class UserEnterRsp;
class UserLeaveRsp;
class DisconnectReq;
class LinkerForward;
class LinkerBroadcast;
class UpdateTokenReq;

enum QueryDBAgentReq_ActoinType {
  QueryDBAgentReq_ActoinType_kCall = 1,
  QueryDBAgentReq_ActoinType_kSelect = 2,
  QueryDBAgentReq_ActoinType_kInsert = 3,
  QueryDBAgentReq_ActoinType_kUpdate = 4,
  QueryDBAgentReq_ActoinType_kDelete = 5
};
bool QueryDBAgentReq_ActoinType_IsValid(int value);
const QueryDBAgentReq_ActoinType QueryDBAgentReq_ActoinType_ActoinType_MIN = QueryDBAgentReq_ActoinType_kCall;
const QueryDBAgentReq_ActoinType QueryDBAgentReq_ActoinType_ActoinType_MAX = QueryDBAgentReq_ActoinType_kDelete;
const int QueryDBAgentReq_ActoinType_ActoinType_ARRAYSIZE = QueryDBAgentReq_ActoinType_ActoinType_MAX + 1;

const ::google::protobuf::EnumDescriptor* QueryDBAgentReq_ActoinType_descriptor();
inline const ::std::string& QueryDBAgentReq_ActoinType_Name(QueryDBAgentReq_ActoinType value) {
  return ::google::protobuf::internal::NameOfEnum(
    QueryDBAgentReq_ActoinType_descriptor(), value);
}
inline bool QueryDBAgentReq_ActoinType_Parse(
    const ::std::string& name, QueryDBAgentReq_ActoinType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QueryDBAgentReq_ActoinType>(
    QueryDBAgentReq_ActoinType_descriptor(), name, value);
}
enum NodeType {
  kLoginServer = 1,
  kLinkerServer = 2,
  kLogicSever = 3,
  kChatServer = 4,
  kGameSever = 5
};
bool NodeType_IsValid(int value);
const NodeType NodeType_MIN = kLoginServer;
const NodeType NodeType_MAX = kGameSever;
const int NodeType_ARRAYSIZE = NodeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* NodeType_descriptor();
inline const ::std::string& NodeType_Name(NodeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    NodeType_descriptor(), value);
}
inline bool NodeType_Parse(
    const ::std::string& name, NodeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NodeType>(
    NodeType_descriptor(), name, value);
}
// ===================================================================

class LoginDBAgentReq : public ::google::protobuf::Message {
 public:
  LoginDBAgentReq();
  virtual ~LoginDBAgentReq();

  LoginDBAgentReq(const LoginDBAgentReq& from);

  inline LoginDBAgentReq& operator=(const LoginDBAgentReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginDBAgentReq& default_instance();

  void Swap(LoginDBAgentReq* other);

  // implements Message ----------------------------------------------

  LoginDBAgentReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginDBAgentReq& from);
  void MergeFrom(const LoginDBAgentReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:svr.LoginDBAgentReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_AssignDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_ShutdownFile_proto_2fserver_5finternal_2eproto();

  void InitAsDefaultInstance();
  static LoginDBAgentReq* default_instance_;
};
// -------------------------------------------------------------------

class LoginDBAgentRsp : public ::google::protobuf::Message {
 public:
  LoginDBAgentRsp();
  virtual ~LoginDBAgentRsp();

  LoginDBAgentRsp(const LoginDBAgentRsp& from);

  inline LoginDBAgentRsp& operator=(const LoginDBAgentRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginDBAgentRsp& default_instance();

  void Swap(LoginDBAgentRsp* other);

  // implements Message ----------------------------------------------

  LoginDBAgentRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginDBAgentRsp& from);
  void MergeFrom(const LoginDBAgentRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 heartbeat_interval = 1;
  inline bool has_heartbeat_interval() const;
  inline void clear_heartbeat_interval();
  static const int kHeartbeatIntervalFieldNumber = 1;
  inline ::google::protobuf::uint32 heartbeat_interval() const;
  inline void set_heartbeat_interval(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:svr.LoginDBAgentRsp)
 private:
  inline void set_has_heartbeat_interval();
  inline void clear_has_heartbeat_interval();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 heartbeat_interval_;
  friend void  protobuf_AddDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_AssignDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_ShutdownFile_proto_2fserver_5finternal_2eproto();

  void InitAsDefaultInstance();
  static LoginDBAgentRsp* default_instance_;
};
// -------------------------------------------------------------------

class DBAgentInfoReq : public ::google::protobuf::Message {
 public:
  DBAgentInfoReq();
  virtual ~DBAgentInfoReq();

  DBAgentInfoReq(const DBAgentInfoReq& from);

  inline DBAgentInfoReq& operator=(const DBAgentInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBAgentInfoReq& default_instance();

  void Swap(DBAgentInfoReq* other);

  // implements Message ----------------------------------------------

  DBAgentInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBAgentInfoReq& from);
  void MergeFrom(const DBAgentInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:svr.DBAgentInfoReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_AssignDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_ShutdownFile_proto_2fserver_5finternal_2eproto();

  void InitAsDefaultInstance();
  static DBAgentInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class DBAgentInfoRsp : public ::google::protobuf::Message {
 public:
  DBAgentInfoRsp();
  virtual ~DBAgentInfoRsp();

  DBAgentInfoRsp(const DBAgentInfoRsp& from);

  inline DBAgentInfoRsp& operator=(const DBAgentInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBAgentInfoRsp& default_instance();

  void Swap(DBAgentInfoRsp* other);

  // implements Message ----------------------------------------------

  DBAgentInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBAgentInfoRsp& from);
  void MergeFrom(const DBAgentInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 up_volume = 1;
  inline bool has_up_volume() const;
  inline void clear_up_volume();
  static const int kUpVolumeFieldNumber = 1;
  inline ::google::protobuf::uint32 up_volume() const;
  inline void set_up_volume(::google::protobuf::uint32 value);

  // required uint32 down_volume = 2;
  inline bool has_down_volume() const;
  inline void clear_down_volume();
  static const int kDownVolumeFieldNumber = 2;
  inline ::google::protobuf::uint32 down_volume() const;
  inline void set_down_volume(::google::protobuf::uint32 value);

  // required uint32 handle_call_count = 3;
  inline bool has_handle_call_count() const;
  inline void clear_handle_call_count();
  static const int kHandleCallCountFieldNumber = 3;
  inline ::google::protobuf::uint32 handle_call_count() const;
  inline void set_handle_call_count(::google::protobuf::uint32 value);

  // required uint32 handle_select_count = 4;
  inline bool has_handle_select_count() const;
  inline void clear_handle_select_count();
  static const int kHandleSelectCountFieldNumber = 4;
  inline ::google::protobuf::uint32 handle_select_count() const;
  inline void set_handle_select_count(::google::protobuf::uint32 value);

  // required uint32 handle_insert_count = 5;
  inline bool has_handle_insert_count() const;
  inline void clear_handle_insert_count();
  static const int kHandleInsertCountFieldNumber = 5;
  inline ::google::protobuf::uint32 handle_insert_count() const;
  inline void set_handle_insert_count(::google::protobuf::uint32 value);

  // required uint32 handle_update_count = 6;
  inline bool has_handle_update_count() const;
  inline void clear_handle_update_count();
  static const int kHandleUpdateCountFieldNumber = 6;
  inline ::google::protobuf::uint32 handle_update_count() const;
  inline void set_handle_update_count(::google::protobuf::uint32 value);

  // required uint32 handle_delete_count = 7;
  inline bool has_handle_delete_count() const;
  inline void clear_handle_delete_count();
  static const int kHandleDeleteCountFieldNumber = 7;
  inline ::google::protobuf::uint32 handle_delete_count() const;
  inline void set_handle_delete_count(::google::protobuf::uint32 value);

  // required uint32 client_num = 8;
  inline bool has_client_num() const;
  inline void clear_client_num();
  static const int kClientNumFieldNumber = 8;
  inline ::google::protobuf::uint32 client_num() const;
  inline void set_client_num(::google::protobuf::uint32 value);

  // required uint32 queue_num = 9;
  inline bool has_queue_num() const;
  inline void clear_queue_num();
  static const int kQueueNumFieldNumber = 9;
  inline ::google::protobuf::uint32 queue_num() const;
  inline void set_queue_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:svr.DBAgentInfoRsp)
 private:
  inline void set_has_up_volume();
  inline void clear_has_up_volume();
  inline void set_has_down_volume();
  inline void clear_has_down_volume();
  inline void set_has_handle_call_count();
  inline void clear_has_handle_call_count();
  inline void set_has_handle_select_count();
  inline void clear_has_handle_select_count();
  inline void set_has_handle_insert_count();
  inline void clear_has_handle_insert_count();
  inline void set_has_handle_update_count();
  inline void clear_has_handle_update_count();
  inline void set_has_handle_delete_count();
  inline void clear_has_handle_delete_count();
  inline void set_has_client_num();
  inline void clear_has_client_num();
  inline void set_has_queue_num();
  inline void clear_has_queue_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 up_volume_;
  ::google::protobuf::uint32 down_volume_;
  ::google::protobuf::uint32 handle_call_count_;
  ::google::protobuf::uint32 handle_select_count_;
  ::google::protobuf::uint32 handle_insert_count_;
  ::google::protobuf::uint32 handle_update_count_;
  ::google::protobuf::uint32 handle_delete_count_;
  ::google::protobuf::uint32 client_num_;
  ::google::protobuf::uint32 queue_num_;
  friend void  protobuf_AddDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_AssignDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_ShutdownFile_proto_2fserver_5finternal_2eproto();

  void InitAsDefaultInstance();
  static DBAgentInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class QueryDBAgentReq : public ::google::protobuf::Message {
 public:
  QueryDBAgentReq();
  virtual ~QueryDBAgentReq();

  QueryDBAgentReq(const QueryDBAgentReq& from);

  inline QueryDBAgentReq& operator=(const QueryDBAgentReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryDBAgentReq& default_instance();

  void Swap(QueryDBAgentReq* other);

  // implements Message ----------------------------------------------

  QueryDBAgentReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryDBAgentReq& from);
  void MergeFrom(const QueryDBAgentReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef QueryDBAgentReq_ActoinType ActoinType;
  static const ActoinType kCall = QueryDBAgentReq_ActoinType_kCall;
  static const ActoinType kSelect = QueryDBAgentReq_ActoinType_kSelect;
  static const ActoinType kInsert = QueryDBAgentReq_ActoinType_kInsert;
  static const ActoinType kUpdate = QueryDBAgentReq_ActoinType_kUpdate;
  static const ActoinType kDelete = QueryDBAgentReq_ActoinType_kDelete;
  static inline bool ActoinType_IsValid(int value) {
    return QueryDBAgentReq_ActoinType_IsValid(value);
  }
  static const ActoinType ActoinType_MIN =
    QueryDBAgentReq_ActoinType_ActoinType_MIN;
  static const ActoinType ActoinType_MAX =
    QueryDBAgentReq_ActoinType_ActoinType_MAX;
  static const int ActoinType_ARRAYSIZE =
    QueryDBAgentReq_ActoinType_ActoinType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ActoinType_descriptor() {
    return QueryDBAgentReq_ActoinType_descriptor();
  }
  static inline const ::std::string& ActoinType_Name(ActoinType value) {
    return QueryDBAgentReq_ActoinType_Name(value);
  }
  static inline bool ActoinType_Parse(const ::std::string& name,
      ActoinType* value) {
    return QueryDBAgentReq_ActoinType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint32 sequence = 1;
  inline bool has_sequence() const;
  inline void clear_sequence();
  static const int kSequenceFieldNumber = 1;
  inline ::google::protobuf::uint32 sequence() const;
  inline void set_sequence(::google::protobuf::uint32 value);

  // required .svr.QueryDBAgentReq.ActoinType action = 2;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 2;
  inline ::svr::QueryDBAgentReq_ActoinType action() const;
  inline void set_action(::svr::QueryDBAgentReq_ActoinType value);

  // required string dbname = 3;
  inline bool has_dbname() const;
  inline void clear_dbname();
  static const int kDbnameFieldNumber = 3;
  inline const ::std::string& dbname() const;
  inline void set_dbname(const ::std::string& value);
  inline void set_dbname(const char* value);
  inline void set_dbname(const char* value, size_t size);
  inline ::std::string* mutable_dbname();
  inline ::std::string* release_dbname();
  inline void set_allocated_dbname(::std::string* dbname);

  // optional string statement = 4;
  inline bool has_statement() const;
  inline void clear_statement();
  static const int kStatementFieldNumber = 4;
  inline const ::std::string& statement() const;
  inline void set_statement(const ::std::string& value);
  inline void set_statement(const char* value);
  inline void set_statement(const char* value, size_t size);
  inline ::std::string* mutable_statement();
  inline ::std::string* release_statement();
  inline void set_allocated_statement(::std::string* statement);

  // @@protoc_insertion_point(class_scope:svr.QueryDBAgentReq)
 private:
  inline void set_has_sequence();
  inline void clear_has_sequence();
  inline void set_has_action();
  inline void clear_has_action();
  inline void set_has_dbname();
  inline void clear_has_dbname();
  inline void set_has_statement();
  inline void clear_has_statement();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 sequence_;
  int action_;
  ::std::string* dbname_;
  ::std::string* statement_;
  friend void  protobuf_AddDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_AssignDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_ShutdownFile_proto_2fserver_5finternal_2eproto();

  void InitAsDefaultInstance();
  static QueryDBAgentReq* default_instance_;
};
// -------------------------------------------------------------------

class QueryDBAgentRsp : public ::google::protobuf::Message {
 public:
  QueryDBAgentRsp();
  virtual ~QueryDBAgentRsp();

  QueryDBAgentRsp(const QueryDBAgentRsp& from);

  inline QueryDBAgentRsp& operator=(const QueryDBAgentRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryDBAgentRsp& default_instance();

  void Swap(QueryDBAgentRsp* other);

  // implements Message ----------------------------------------------

  QueryDBAgentRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryDBAgentRsp& from);
  void MergeFrom(const QueryDBAgentRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 sequence = 1;
  inline bool has_sequence() const;
  inline void clear_sequence();
  static const int kSequenceFieldNumber = 1;
  inline ::google::protobuf::uint32 sequence() const;
  inline void set_sequence(::google::protobuf::uint32 value);

  // optional bytes result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline const ::std::string& result() const;
  inline void set_result(const ::std::string& value);
  inline void set_result(const char* value);
  inline void set_result(const void* value, size_t size);
  inline ::std::string* mutable_result();
  inline ::std::string* release_result();
  inline void set_allocated_result(::std::string* result);

  // @@protoc_insertion_point(class_scope:svr.QueryDBAgentRsp)
 private:
  inline void set_has_sequence();
  inline void clear_has_sequence();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* result_;
  ::google::protobuf::uint32 sequence_;
  friend void  protobuf_AddDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_AssignDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_ShutdownFile_proto_2fserver_5finternal_2eproto();

  void InitAsDefaultInstance();
  static QueryDBAgentRsp* default_instance_;
};
// -------------------------------------------------------------------

class DBErrorRsp : public ::google::protobuf::Message {
 public:
  DBErrorRsp();
  virtual ~DBErrorRsp();

  DBErrorRsp(const DBErrorRsp& from);

  inline DBErrorRsp& operator=(const DBErrorRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBErrorRsp& default_instance();

  void Swap(DBErrorRsp* other);

  // implements Message ----------------------------------------------

  DBErrorRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBErrorRsp& from);
  void MergeFrom(const DBErrorRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 sequence = 1;
  inline bool has_sequence() const;
  inline void clear_sequence();
  static const int kSequenceFieldNumber = 1;
  inline ::google::protobuf::uint32 sequence() const;
  inline void set_sequence(::google::protobuf::uint32 value);

  // required int32 error_code = 2;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 2;
  inline ::google::protobuf::int32 error_code() const;
  inline void set_error_code(::google::protobuf::int32 value);

  // optional string what = 3;
  inline bool has_what() const;
  inline void clear_what();
  static const int kWhatFieldNumber = 3;
  inline const ::std::string& what() const;
  inline void set_what(const ::std::string& value);
  inline void set_what(const char* value);
  inline void set_what(const char* value, size_t size);
  inline ::std::string* mutable_what();
  inline ::std::string* release_what();
  inline void set_allocated_what(::std::string* what);

  // @@protoc_insertion_point(class_scope:svr.DBErrorRsp)
 private:
  inline void set_has_sequence();
  inline void clear_has_sequence();
  inline void set_has_error_code();
  inline void clear_has_error_code();
  inline void set_has_what();
  inline void clear_has_what();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 sequence_;
  ::google::protobuf::int32 error_code_;
  ::std::string* what_;
  friend void  protobuf_AddDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_AssignDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_ShutdownFile_proto_2fserver_5finternal_2eproto();

  void InitAsDefaultInstance();
  static DBErrorRsp* default_instance_;
};
// -------------------------------------------------------------------

class DBAgentErrorRsp : public ::google::protobuf::Message {
 public:
  DBAgentErrorRsp();
  virtual ~DBAgentErrorRsp();

  DBAgentErrorRsp(const DBAgentErrorRsp& from);

  inline DBAgentErrorRsp& operator=(const DBAgentErrorRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBAgentErrorRsp& default_instance();

  void Swap(DBAgentErrorRsp* other);

  // implements Message ----------------------------------------------

  DBAgentErrorRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBAgentErrorRsp& from);
  void MergeFrom(const DBAgentErrorRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pub.ErrorCode error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::pub::ErrorCode error_code() const;
  inline void set_error_code(::pub::ErrorCode value);

  // optional uint32 sequence = 2;
  inline bool has_sequence() const;
  inline void clear_sequence();
  static const int kSequenceFieldNumber = 2;
  inline ::google::protobuf::uint32 sequence() const;
  inline void set_sequence(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:svr.DBAgentErrorRsp)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();
  inline void set_has_sequence();
  inline void clear_has_sequence();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int error_code_;
  ::google::protobuf::uint32 sequence_;
  friend void  protobuf_AddDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_AssignDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_ShutdownFile_proto_2fserver_5finternal_2eproto();

  void InitAsDefaultInstance();
  static DBAgentErrorRsp* default_instance_;
};
// -------------------------------------------------------------------

class ChildNode : public ::google::protobuf::Message {
 public:
  ChildNode();
  virtual ~ChildNode();

  ChildNode(const ChildNode& from);

  inline ChildNode& operator=(const ChildNode& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChildNode& default_instance();

  void Swap(ChildNode* other);

  // implements Message ----------------------------------------------

  ChildNode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChildNode& from);
  void MergeFrom(const ChildNode& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .svr.NodeType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::svr::NodeType type() const;
  inline void set_type(::svr::NodeType value);

  // optional uint32 child_id = 2 [default = 1];
  inline bool has_child_id() const;
  inline void clear_child_id();
  static const int kChildIdFieldNumber = 2;
  inline ::google::protobuf::uint32 child_id() const;
  inline void set_child_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:svr.ChildNode)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_child_id();
  inline void clear_has_child_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::uint32 child_id_;
  friend void  protobuf_AddDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_AssignDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_ShutdownFile_proto_2fserver_5finternal_2eproto();

  void InitAsDefaultInstance();
  static ChildNode* default_instance_;
};
// -------------------------------------------------------------------

class LoginGWReq : public ::google::protobuf::Message {
 public:
  LoginGWReq();
  virtual ~LoginGWReq();

  LoginGWReq(const LoginGWReq& from);

  inline LoginGWReq& operator=(const LoginGWReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginGWReq& default_instance();

  void Swap(LoginGWReq* other);

  // implements Message ----------------------------------------------

  LoginGWReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginGWReq& from);
  void MergeFrom(const LoginGWReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .svr.ChildNode node = 1;
  inline bool has_node() const;
  inline void clear_node();
  static const int kNodeFieldNumber = 1;
  inline const ::svr::ChildNode& node() const;
  inline ::svr::ChildNode* mutable_node();
  inline ::svr::ChildNode* release_node();
  inline void set_allocated_node(::svr::ChildNode* node);

  // @@protoc_insertion_point(class_scope:svr.LoginGWReq)
 private:
  inline void set_has_node();
  inline void clear_has_node();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::svr::ChildNode* node_;
  friend void  protobuf_AddDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_AssignDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_ShutdownFile_proto_2fserver_5finternal_2eproto();

  void InitAsDefaultInstance();
  static LoginGWReq* default_instance_;
};
// -------------------------------------------------------------------

class LoginGWRsp : public ::google::protobuf::Message {
 public:
  LoginGWRsp();
  virtual ~LoginGWRsp();

  LoginGWRsp(const LoginGWRsp& from);

  inline LoginGWRsp& operator=(const LoginGWRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginGWRsp& default_instance();

  void Swap(LoginGWRsp* other);

  // implements Message ----------------------------------------------

  LoginGWRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginGWRsp& from);
  void MergeFrom(const LoginGWRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 heartbeat_interval = 1;
  inline bool has_heartbeat_interval() const;
  inline void clear_heartbeat_interval();
  static const int kHeartbeatIntervalFieldNumber = 1;
  inline ::google::protobuf::uint32 heartbeat_interval() const;
  inline void set_heartbeat_interval(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:svr.LoginGWRsp)
 private:
  inline void set_has_heartbeat_interval();
  inline void clear_has_heartbeat_interval();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 heartbeat_interval_;
  friend void  protobuf_AddDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_AssignDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_ShutdownFile_proto_2fserver_5finternal_2eproto();

  void InitAsDefaultInstance();
  static LoginGWRsp* default_instance_;
};
// -------------------------------------------------------------------

class GWInfoReq : public ::google::protobuf::Message {
 public:
  GWInfoReq();
  virtual ~GWInfoReq();

  GWInfoReq(const GWInfoReq& from);

  inline GWInfoReq& operator=(const GWInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GWInfoReq& default_instance();

  void Swap(GWInfoReq* other);

  // implements Message ----------------------------------------------

  GWInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GWInfoReq& from);
  void MergeFrom(const GWInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:svr.GWInfoReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_AssignDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_ShutdownFile_proto_2fserver_5finternal_2eproto();

  void InitAsDefaultInstance();
  static GWInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class GWInfoRsp : public ::google::protobuf::Message {
 public:
  GWInfoRsp();
  virtual ~GWInfoRsp();

  GWInfoRsp(const GWInfoRsp& from);

  inline GWInfoRsp& operator=(const GWInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GWInfoRsp& default_instance();

  void Swap(GWInfoRsp* other);

  // implements Message ----------------------------------------------

  GWInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GWInfoRsp& from);
  void MergeFrom(const GWInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 up_volume = 1;
  inline bool has_up_volume() const;
  inline void clear_up_volume();
  static const int kUpVolumeFieldNumber = 1;
  inline ::google::protobuf::uint32 up_volume() const;
  inline void set_up_volume(::google::protobuf::uint32 value);

  // required uint32 down_volume = 2;
  inline bool has_down_volume() const;
  inline void clear_down_volume();
  static const int kDownVolumeFieldNumber = 2;
  inline ::google::protobuf::uint32 down_volume() const;
  inline void set_down_volume(::google::protobuf::uint32 value);

  // repeated .svr.ChildNode node_lists = 3;
  inline int node_lists_size() const;
  inline void clear_node_lists();
  static const int kNodeListsFieldNumber = 3;
  inline const ::svr::ChildNode& node_lists(int index) const;
  inline ::svr::ChildNode* mutable_node_lists(int index);
  inline ::svr::ChildNode* add_node_lists();
  inline const ::google::protobuf::RepeatedPtrField< ::svr::ChildNode >&
      node_lists() const;
  inline ::google::protobuf::RepeatedPtrField< ::svr::ChildNode >*
      mutable_node_lists();

  // @@protoc_insertion_point(class_scope:svr.GWInfoRsp)
 private:
  inline void set_has_up_volume();
  inline void clear_has_up_volume();
  inline void set_has_down_volume();
  inline void clear_has_down_volume();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 up_volume_;
  ::google::protobuf::uint32 down_volume_;
  ::google::protobuf::RepeatedPtrField< ::svr::ChildNode > node_lists_;
  friend void  protobuf_AddDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_AssignDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_ShutdownFile_proto_2fserver_5finternal_2eproto();

  void InitAsDefaultInstance();
  static GWInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class ForwardReq : public ::google::protobuf::Message {
 public:
  ForwardReq();
  virtual ~ForwardReq();

  ForwardReq(const ForwardReq& from);

  inline ForwardReq& operator=(const ForwardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ForwardReq& default_instance();

  void Swap(ForwardReq* other);

  // implements Message ----------------------------------------------

  ForwardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ForwardReq& from);
  void MergeFrom(const ForwardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .svr.ChildNode dst = 1;
  inline bool has_dst() const;
  inline void clear_dst();
  static const int kDstFieldNumber = 1;
  inline const ::svr::ChildNode& dst() const;
  inline ::svr::ChildNode* mutable_dst();
  inline ::svr::ChildNode* release_dst();
  inline void set_allocated_dst(::svr::ChildNode* dst);

  // required bytes user_data = 2;
  inline bool has_user_data() const;
  inline void clear_user_data();
  static const int kUserDataFieldNumber = 2;
  inline const ::std::string& user_data() const;
  inline void set_user_data(const ::std::string& value);
  inline void set_user_data(const char* value);
  inline void set_user_data(const void* value, size_t size);
  inline ::std::string* mutable_user_data();
  inline ::std::string* release_user_data();
  inline void set_allocated_user_data(::std::string* user_data);

  // @@protoc_insertion_point(class_scope:svr.ForwardReq)
 private:
  inline void set_has_dst();
  inline void clear_has_dst();
  inline void set_has_user_data();
  inline void clear_has_user_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::svr::ChildNode* dst_;
  ::std::string* user_data_;
  friend void  protobuf_AddDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_AssignDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_ShutdownFile_proto_2fserver_5finternal_2eproto();

  void InitAsDefaultInstance();
  static ForwardReq* default_instance_;
};
// -------------------------------------------------------------------

class BroadcastReq : public ::google::protobuf::Message {
 public:
  BroadcastReq();
  virtual ~BroadcastReq();

  BroadcastReq(const BroadcastReq& from);

  inline BroadcastReq& operator=(const BroadcastReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BroadcastReq& default_instance();

  void Swap(BroadcastReq* other);

  // implements Message ----------------------------------------------

  BroadcastReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BroadcastReq& from);
  void MergeFrom(const BroadcastReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .svr.NodeType dst_lists = 1;
  inline int dst_lists_size() const;
  inline void clear_dst_lists();
  static const int kDstListsFieldNumber = 1;
  inline ::svr::NodeType dst_lists(int index) const;
  inline void set_dst_lists(int index, ::svr::NodeType value);
  inline void add_dst_lists(::svr::NodeType value);
  inline const ::google::protobuf::RepeatedField<int>& dst_lists() const;
  inline ::google::protobuf::RepeatedField<int>* mutable_dst_lists();

  // required bytes user_data = 2;
  inline bool has_user_data() const;
  inline void clear_user_data();
  static const int kUserDataFieldNumber = 2;
  inline const ::std::string& user_data() const;
  inline void set_user_data(const ::std::string& value);
  inline void set_user_data(const char* value);
  inline void set_user_data(const void* value, size_t size);
  inline ::std::string* mutable_user_data();
  inline ::std::string* release_user_data();
  inline void set_allocated_user_data(::std::string* user_data);

  // @@protoc_insertion_point(class_scope:svr.BroadcastReq)
 private:
  inline void set_has_user_data();
  inline void clear_has_user_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField<int> dst_lists_;
  ::std::string* user_data_;
  friend void  protobuf_AddDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_AssignDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_ShutdownFile_proto_2fserver_5finternal_2eproto();

  void InitAsDefaultInstance();
  static BroadcastReq* default_instance_;
};
// -------------------------------------------------------------------

class GWNotify : public ::google::protobuf::Message {
 public:
  GWNotify();
  virtual ~GWNotify();

  GWNotify(const GWNotify& from);

  inline GWNotify& operator=(const GWNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GWNotify& default_instance();

  void Swap(GWNotify* other);

  // implements Message ----------------------------------------------

  GWNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GWNotify& from);
  void MergeFrom(const GWNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .svr.ChildNode src = 1;
  inline bool has_src() const;
  inline void clear_src();
  static const int kSrcFieldNumber = 1;
  inline const ::svr::ChildNode& src() const;
  inline ::svr::ChildNode* mutable_src();
  inline ::svr::ChildNode* release_src();
  inline void set_allocated_src(::svr::ChildNode* src);

  // required bytes user_data = 2;
  inline bool has_user_data() const;
  inline void clear_user_data();
  static const int kUserDataFieldNumber = 2;
  inline const ::std::string& user_data() const;
  inline void set_user_data(const ::std::string& value);
  inline void set_user_data(const char* value);
  inline void set_user_data(const void* value, size_t size);
  inline ::std::string* mutable_user_data();
  inline ::std::string* release_user_data();
  inline void set_allocated_user_data(::std::string* user_data);

  // @@protoc_insertion_point(class_scope:svr.GWNotify)
 private:
  inline void set_has_src();
  inline void clear_has_src();
  inline void set_has_user_data();
  inline void clear_has_user_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::svr::ChildNode* src_;
  ::std::string* user_data_;
  friend void  protobuf_AddDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_AssignDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_ShutdownFile_proto_2fserver_5finternal_2eproto();

  void InitAsDefaultInstance();
  static GWNotify* default_instance_;
};
// -------------------------------------------------------------------

class LinkerLoginReq : public ::google::protobuf::Message {
 public:
  LinkerLoginReq();
  virtual ~LinkerLoginReq();

  LinkerLoginReq(const LinkerLoginReq& from);

  inline LinkerLoginReq& operator=(const LinkerLoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LinkerLoginReq& default_instance();

  void Swap(LinkerLoginReq* other);

  // implements Message ----------------------------------------------

  LinkerLoginReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LinkerLoginReq& from);
  void MergeFrom(const LinkerLoginReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 partition_id = 1;
  inline bool has_partition_id() const;
  inline void clear_partition_id();
  static const int kPartitionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 partition_id() const;
  inline void set_partition_id(::google::protobuf::uint32 value);

  // required string public_ip = 2;
  inline bool has_public_ip() const;
  inline void clear_public_ip();
  static const int kPublicIpFieldNumber = 2;
  inline const ::std::string& public_ip() const;
  inline void set_public_ip(const ::std::string& value);
  inline void set_public_ip(const char* value);
  inline void set_public_ip(const char* value, size_t size);
  inline ::std::string* mutable_public_ip();
  inline ::std::string* release_public_ip();
  inline void set_allocated_public_ip(::std::string* public_ip);

  // required uint32 port = 3;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 3;
  inline ::google::protobuf::uint32 port() const;
  inline void set_port(::google::protobuf::uint32 value);

  // optional uint32 linker_id = 4;
  inline bool has_linker_id() const;
  inline void clear_linker_id();
  static const int kLinkerIdFieldNumber = 4;
  inline ::google::protobuf::uint32 linker_id() const;
  inline void set_linker_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:svr.LinkerLoginReq)
 private:
  inline void set_has_partition_id();
  inline void clear_has_partition_id();
  inline void set_has_public_ip();
  inline void clear_has_public_ip();
  inline void set_has_port();
  inline void clear_has_port();
  inline void set_has_linker_id();
  inline void clear_has_linker_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* public_ip_;
  ::google::protobuf::uint32 partition_id_;
  ::google::protobuf::uint32 port_;
  ::google::protobuf::uint32 linker_id_;
  friend void  protobuf_AddDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_AssignDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_ShutdownFile_proto_2fserver_5finternal_2eproto();

  void InitAsDefaultInstance();
  static LinkerLoginReq* default_instance_;
};
// -------------------------------------------------------------------

class LinkerLoginRsp : public ::google::protobuf::Message {
 public:
  LinkerLoginRsp();
  virtual ~LinkerLoginRsp();

  LinkerLoginRsp(const LinkerLoginRsp& from);

  inline LinkerLoginRsp& operator=(const LinkerLoginRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LinkerLoginRsp& default_instance();

  void Swap(LinkerLoginRsp* other);

  // implements Message ----------------------------------------------

  LinkerLoginRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LinkerLoginRsp& from);
  void MergeFrom(const LinkerLoginRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 heartbeat_interval = 1;
  inline bool has_heartbeat_interval() const;
  inline void clear_heartbeat_interval();
  static const int kHeartbeatIntervalFieldNumber = 1;
  inline ::google::protobuf::uint32 heartbeat_interval() const;
  inline void set_heartbeat_interval(::google::protobuf::uint32 value);

  // required uint32 linker_id = 2;
  inline bool has_linker_id() const;
  inline void clear_linker_id();
  static const int kLinkerIdFieldNumber = 2;
  inline ::google::protobuf::uint32 linker_id() const;
  inline void set_linker_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:svr.LinkerLoginRsp)
 private:
  inline void set_has_heartbeat_interval();
  inline void clear_has_heartbeat_interval();
  inline void set_has_linker_id();
  inline void clear_has_linker_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 heartbeat_interval_;
  ::google::protobuf::uint32 linker_id_;
  friend void  protobuf_AddDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_AssignDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_ShutdownFile_proto_2fserver_5finternal_2eproto();

  void InitAsDefaultInstance();
  static LinkerLoginRsp* default_instance_;
};
// -------------------------------------------------------------------

class ReportLinkerReq : public ::google::protobuf::Message {
 public:
  ReportLinkerReq();
  virtual ~ReportLinkerReq();

  ReportLinkerReq(const ReportLinkerReq& from);

  inline ReportLinkerReq& operator=(const ReportLinkerReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportLinkerReq& default_instance();

  void Swap(ReportLinkerReq* other);

  // implements Message ----------------------------------------------

  ReportLinkerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReportLinkerReq& from);
  void MergeFrom(const ReportLinkerReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 load = 1;
  inline bool has_load() const;
  inline void clear_load();
  static const int kLoadFieldNumber = 1;
  inline ::google::protobuf::uint32 load() const;
  inline void set_load(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:svr.ReportLinkerReq)
 private:
  inline void set_has_load();
  inline void clear_has_load();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 load_;
  friend void  protobuf_AddDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_AssignDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_ShutdownFile_proto_2fserver_5finternal_2eproto();

  void InitAsDefaultInstance();
  static ReportLinkerReq* default_instance_;
};
// -------------------------------------------------------------------

class UserEnterRsp : public ::google::protobuf::Message {
 public:
  UserEnterRsp();
  virtual ~UserEnterRsp();

  UserEnterRsp(const UserEnterRsp& from);

  inline UserEnterRsp& operator=(const UserEnterRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserEnterRsp& default_instance();

  void Swap(UserEnterRsp* other);

  // implements Message ----------------------------------------------

  UserEnterRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserEnterRsp& from);
  void MergeFrom(const UserEnterRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:svr.UserEnterRsp)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 user_id_;
  friend void  protobuf_AddDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_AssignDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_ShutdownFile_proto_2fserver_5finternal_2eproto();

  void InitAsDefaultInstance();
  static UserEnterRsp* default_instance_;
};
// -------------------------------------------------------------------

class UserLeaveRsp : public ::google::protobuf::Message {
 public:
  UserLeaveRsp();
  virtual ~UserLeaveRsp();

  UserLeaveRsp(const UserLeaveRsp& from);

  inline UserLeaveRsp& operator=(const UserLeaveRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserLeaveRsp& default_instance();

  void Swap(UserLeaveRsp* other);

  // implements Message ----------------------------------------------

  UserLeaveRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserLeaveRsp& from);
  void MergeFrom(const UserLeaveRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:svr.UserLeaveRsp)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 user_id_;
  friend void  protobuf_AddDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_AssignDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_ShutdownFile_proto_2fserver_5finternal_2eproto();

  void InitAsDefaultInstance();
  static UserLeaveRsp* default_instance_;
};
// -------------------------------------------------------------------

class DisconnectReq : public ::google::protobuf::Message {
 public:
  DisconnectReq();
  virtual ~DisconnectReq();

  DisconnectReq(const DisconnectReq& from);

  inline DisconnectReq& operator=(const DisconnectReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DisconnectReq& default_instance();

  void Swap(DisconnectReq* other);

  // implements Message ----------------------------------------------

  DisconnectReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DisconnectReq& from);
  void MergeFrom(const DisconnectReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:svr.DisconnectReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_AssignDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_ShutdownFile_proto_2fserver_5finternal_2eproto();

  void InitAsDefaultInstance();
  static DisconnectReq* default_instance_;
};
// -------------------------------------------------------------------

class LinkerForward : public ::google::protobuf::Message {
 public:
  LinkerForward();
  virtual ~LinkerForward();

  LinkerForward(const LinkerForward& from);

  inline LinkerForward& operator=(const LinkerForward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LinkerForward& default_instance();

  void Swap(LinkerForward* other);

  // implements Message ----------------------------------------------

  LinkerForward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LinkerForward& from);
  void MergeFrom(const LinkerForward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required bytes user_data = 2;
  inline bool has_user_data() const;
  inline void clear_user_data();
  static const int kUserDataFieldNumber = 2;
  inline const ::std::string& user_data() const;
  inline void set_user_data(const ::std::string& value);
  inline void set_user_data(const char* value);
  inline void set_user_data(const void* value, size_t size);
  inline ::std::string* mutable_user_data();
  inline ::std::string* release_user_data();
  inline void set_allocated_user_data(::std::string* user_data);

  // @@protoc_insertion_point(class_scope:svr.LinkerForward)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_user_data();
  inline void clear_has_user_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* user_data_;
  ::google::protobuf::uint32 user_id_;
  friend void  protobuf_AddDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_AssignDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_ShutdownFile_proto_2fserver_5finternal_2eproto();

  void InitAsDefaultInstance();
  static LinkerForward* default_instance_;
};
// -------------------------------------------------------------------

class LinkerBroadcast : public ::google::protobuf::Message {
 public:
  LinkerBroadcast();
  virtual ~LinkerBroadcast();

  LinkerBroadcast(const LinkerBroadcast& from);

  inline LinkerBroadcast& operator=(const LinkerBroadcast& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LinkerBroadcast& default_instance();

  void Swap(LinkerBroadcast* other);

  // implements Message ----------------------------------------------

  LinkerBroadcast* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LinkerBroadcast& from);
  void MergeFrom(const LinkerBroadcast& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes user_data = 1;
  inline bool has_user_data() const;
  inline void clear_user_data();
  static const int kUserDataFieldNumber = 1;
  inline const ::std::string& user_data() const;
  inline void set_user_data(const ::std::string& value);
  inline void set_user_data(const char* value);
  inline void set_user_data(const void* value, size_t size);
  inline ::std::string* mutable_user_data();
  inline ::std::string* release_user_data();
  inline void set_allocated_user_data(::std::string* user_data);

  // @@protoc_insertion_point(class_scope:svr.LinkerBroadcast)
 private:
  inline void set_has_user_data();
  inline void clear_has_user_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* user_data_;
  friend void  protobuf_AddDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_AssignDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_ShutdownFile_proto_2fserver_5finternal_2eproto();

  void InitAsDefaultInstance();
  static LinkerBroadcast* default_instance_;
};
// -------------------------------------------------------------------

class UpdateTokenReq : public ::google::protobuf::Message {
 public:
  UpdateTokenReq();
  virtual ~UpdateTokenReq();

  UpdateTokenReq(const UpdateTokenReq& from);

  inline UpdateTokenReq& operator=(const UpdateTokenReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateTokenReq& default_instance();

  void Swap(UpdateTokenReq* other);

  // implements Message ----------------------------------------------

  UpdateTokenReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateTokenReq& from);
  void MergeFrom(const UpdateTokenReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required uint64 token = 2;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 2;
  inline ::google::protobuf::uint64 token() const;
  inline void set_token(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:svr.UpdateTokenReq)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_token();
  inline void clear_has_token();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 token_;
  ::google::protobuf::uint32 user_id_;
  friend void  protobuf_AddDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_AssignDesc_proto_2fserver_5finternal_2eproto();
  friend void protobuf_ShutdownFile_proto_2fserver_5finternal_2eproto();

  void InitAsDefaultInstance();
  static UpdateTokenReq* default_instance_;
};
// ===================================================================


// ===================================================================

// LoginDBAgentReq

// -------------------------------------------------------------------

// LoginDBAgentRsp

// required uint32 heartbeat_interval = 1;
inline bool LoginDBAgentRsp::has_heartbeat_interval() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginDBAgentRsp::set_has_heartbeat_interval() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginDBAgentRsp::clear_has_heartbeat_interval() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginDBAgentRsp::clear_heartbeat_interval() {
  heartbeat_interval_ = 0u;
  clear_has_heartbeat_interval();
}
inline ::google::protobuf::uint32 LoginDBAgentRsp::heartbeat_interval() const {
  // @@protoc_insertion_point(field_get:svr.LoginDBAgentRsp.heartbeat_interval)
  return heartbeat_interval_;
}
inline void LoginDBAgentRsp::set_heartbeat_interval(::google::protobuf::uint32 value) {
  set_has_heartbeat_interval();
  heartbeat_interval_ = value;
  // @@protoc_insertion_point(field_set:svr.LoginDBAgentRsp.heartbeat_interval)
}

// -------------------------------------------------------------------

// DBAgentInfoReq

// -------------------------------------------------------------------

// DBAgentInfoRsp

// required uint32 up_volume = 1;
inline bool DBAgentInfoRsp::has_up_volume() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBAgentInfoRsp::set_has_up_volume() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBAgentInfoRsp::clear_has_up_volume() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBAgentInfoRsp::clear_up_volume() {
  up_volume_ = 0u;
  clear_has_up_volume();
}
inline ::google::protobuf::uint32 DBAgentInfoRsp::up_volume() const {
  // @@protoc_insertion_point(field_get:svr.DBAgentInfoRsp.up_volume)
  return up_volume_;
}
inline void DBAgentInfoRsp::set_up_volume(::google::protobuf::uint32 value) {
  set_has_up_volume();
  up_volume_ = value;
  // @@protoc_insertion_point(field_set:svr.DBAgentInfoRsp.up_volume)
}

// required uint32 down_volume = 2;
inline bool DBAgentInfoRsp::has_down_volume() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBAgentInfoRsp::set_has_down_volume() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBAgentInfoRsp::clear_has_down_volume() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBAgentInfoRsp::clear_down_volume() {
  down_volume_ = 0u;
  clear_has_down_volume();
}
inline ::google::protobuf::uint32 DBAgentInfoRsp::down_volume() const {
  // @@protoc_insertion_point(field_get:svr.DBAgentInfoRsp.down_volume)
  return down_volume_;
}
inline void DBAgentInfoRsp::set_down_volume(::google::protobuf::uint32 value) {
  set_has_down_volume();
  down_volume_ = value;
  // @@protoc_insertion_point(field_set:svr.DBAgentInfoRsp.down_volume)
}

// required uint32 handle_call_count = 3;
inline bool DBAgentInfoRsp::has_handle_call_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DBAgentInfoRsp::set_has_handle_call_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DBAgentInfoRsp::clear_has_handle_call_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DBAgentInfoRsp::clear_handle_call_count() {
  handle_call_count_ = 0u;
  clear_has_handle_call_count();
}
inline ::google::protobuf::uint32 DBAgentInfoRsp::handle_call_count() const {
  // @@protoc_insertion_point(field_get:svr.DBAgentInfoRsp.handle_call_count)
  return handle_call_count_;
}
inline void DBAgentInfoRsp::set_handle_call_count(::google::protobuf::uint32 value) {
  set_has_handle_call_count();
  handle_call_count_ = value;
  // @@protoc_insertion_point(field_set:svr.DBAgentInfoRsp.handle_call_count)
}

// required uint32 handle_select_count = 4;
inline bool DBAgentInfoRsp::has_handle_select_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DBAgentInfoRsp::set_has_handle_select_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DBAgentInfoRsp::clear_has_handle_select_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DBAgentInfoRsp::clear_handle_select_count() {
  handle_select_count_ = 0u;
  clear_has_handle_select_count();
}
inline ::google::protobuf::uint32 DBAgentInfoRsp::handle_select_count() const {
  // @@protoc_insertion_point(field_get:svr.DBAgentInfoRsp.handle_select_count)
  return handle_select_count_;
}
inline void DBAgentInfoRsp::set_handle_select_count(::google::protobuf::uint32 value) {
  set_has_handle_select_count();
  handle_select_count_ = value;
  // @@protoc_insertion_point(field_set:svr.DBAgentInfoRsp.handle_select_count)
}

// required uint32 handle_insert_count = 5;
inline bool DBAgentInfoRsp::has_handle_insert_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DBAgentInfoRsp::set_has_handle_insert_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DBAgentInfoRsp::clear_has_handle_insert_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DBAgentInfoRsp::clear_handle_insert_count() {
  handle_insert_count_ = 0u;
  clear_has_handle_insert_count();
}
inline ::google::protobuf::uint32 DBAgentInfoRsp::handle_insert_count() const {
  // @@protoc_insertion_point(field_get:svr.DBAgentInfoRsp.handle_insert_count)
  return handle_insert_count_;
}
inline void DBAgentInfoRsp::set_handle_insert_count(::google::protobuf::uint32 value) {
  set_has_handle_insert_count();
  handle_insert_count_ = value;
  // @@protoc_insertion_point(field_set:svr.DBAgentInfoRsp.handle_insert_count)
}

// required uint32 handle_update_count = 6;
inline bool DBAgentInfoRsp::has_handle_update_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DBAgentInfoRsp::set_has_handle_update_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DBAgentInfoRsp::clear_has_handle_update_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DBAgentInfoRsp::clear_handle_update_count() {
  handle_update_count_ = 0u;
  clear_has_handle_update_count();
}
inline ::google::protobuf::uint32 DBAgentInfoRsp::handle_update_count() const {
  // @@protoc_insertion_point(field_get:svr.DBAgentInfoRsp.handle_update_count)
  return handle_update_count_;
}
inline void DBAgentInfoRsp::set_handle_update_count(::google::protobuf::uint32 value) {
  set_has_handle_update_count();
  handle_update_count_ = value;
  // @@protoc_insertion_point(field_set:svr.DBAgentInfoRsp.handle_update_count)
}

// required uint32 handle_delete_count = 7;
inline bool DBAgentInfoRsp::has_handle_delete_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DBAgentInfoRsp::set_has_handle_delete_count() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DBAgentInfoRsp::clear_has_handle_delete_count() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DBAgentInfoRsp::clear_handle_delete_count() {
  handle_delete_count_ = 0u;
  clear_has_handle_delete_count();
}
inline ::google::protobuf::uint32 DBAgentInfoRsp::handle_delete_count() const {
  // @@protoc_insertion_point(field_get:svr.DBAgentInfoRsp.handle_delete_count)
  return handle_delete_count_;
}
inline void DBAgentInfoRsp::set_handle_delete_count(::google::protobuf::uint32 value) {
  set_has_handle_delete_count();
  handle_delete_count_ = value;
  // @@protoc_insertion_point(field_set:svr.DBAgentInfoRsp.handle_delete_count)
}

// required uint32 client_num = 8;
inline bool DBAgentInfoRsp::has_client_num() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DBAgentInfoRsp::set_has_client_num() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DBAgentInfoRsp::clear_has_client_num() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DBAgentInfoRsp::clear_client_num() {
  client_num_ = 0u;
  clear_has_client_num();
}
inline ::google::protobuf::uint32 DBAgentInfoRsp::client_num() const {
  // @@protoc_insertion_point(field_get:svr.DBAgentInfoRsp.client_num)
  return client_num_;
}
inline void DBAgentInfoRsp::set_client_num(::google::protobuf::uint32 value) {
  set_has_client_num();
  client_num_ = value;
  // @@protoc_insertion_point(field_set:svr.DBAgentInfoRsp.client_num)
}

// required uint32 queue_num = 9;
inline bool DBAgentInfoRsp::has_queue_num() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DBAgentInfoRsp::set_has_queue_num() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DBAgentInfoRsp::clear_has_queue_num() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DBAgentInfoRsp::clear_queue_num() {
  queue_num_ = 0u;
  clear_has_queue_num();
}
inline ::google::protobuf::uint32 DBAgentInfoRsp::queue_num() const {
  // @@protoc_insertion_point(field_get:svr.DBAgentInfoRsp.queue_num)
  return queue_num_;
}
inline void DBAgentInfoRsp::set_queue_num(::google::protobuf::uint32 value) {
  set_has_queue_num();
  queue_num_ = value;
  // @@protoc_insertion_point(field_set:svr.DBAgentInfoRsp.queue_num)
}

// -------------------------------------------------------------------

// QueryDBAgentReq

// required uint32 sequence = 1;
inline bool QueryDBAgentReq::has_sequence() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryDBAgentReq::set_has_sequence() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryDBAgentReq::clear_has_sequence() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryDBAgentReq::clear_sequence() {
  sequence_ = 0u;
  clear_has_sequence();
}
inline ::google::protobuf::uint32 QueryDBAgentReq::sequence() const {
  // @@protoc_insertion_point(field_get:svr.QueryDBAgentReq.sequence)
  return sequence_;
}
inline void QueryDBAgentReq::set_sequence(::google::protobuf::uint32 value) {
  set_has_sequence();
  sequence_ = value;
  // @@protoc_insertion_point(field_set:svr.QueryDBAgentReq.sequence)
}

// required .svr.QueryDBAgentReq.ActoinType action = 2;
inline bool QueryDBAgentReq::has_action() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryDBAgentReq::set_has_action() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryDBAgentReq::clear_has_action() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryDBAgentReq::clear_action() {
  action_ = 1;
  clear_has_action();
}
inline ::svr::QueryDBAgentReq_ActoinType QueryDBAgentReq::action() const {
  // @@protoc_insertion_point(field_get:svr.QueryDBAgentReq.action)
  return static_cast< ::svr::QueryDBAgentReq_ActoinType >(action_);
}
inline void QueryDBAgentReq::set_action(::svr::QueryDBAgentReq_ActoinType value) {
  assert(::svr::QueryDBAgentReq_ActoinType_IsValid(value));
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:svr.QueryDBAgentReq.action)
}

// required string dbname = 3;
inline bool QueryDBAgentReq::has_dbname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryDBAgentReq::set_has_dbname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryDBAgentReq::clear_has_dbname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryDBAgentReq::clear_dbname() {
  if (dbname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbname_->clear();
  }
  clear_has_dbname();
}
inline const ::std::string& QueryDBAgentReq::dbname() const {
  // @@protoc_insertion_point(field_get:svr.QueryDBAgentReq.dbname)
  return *dbname_;
}
inline void QueryDBAgentReq::set_dbname(const ::std::string& value) {
  set_has_dbname();
  if (dbname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbname_ = new ::std::string;
  }
  dbname_->assign(value);
  // @@protoc_insertion_point(field_set:svr.QueryDBAgentReq.dbname)
}
inline void QueryDBAgentReq::set_dbname(const char* value) {
  set_has_dbname();
  if (dbname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbname_ = new ::std::string;
  }
  dbname_->assign(value);
  // @@protoc_insertion_point(field_set_char:svr.QueryDBAgentReq.dbname)
}
inline void QueryDBAgentReq::set_dbname(const char* value, size_t size) {
  set_has_dbname();
  if (dbname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbname_ = new ::std::string;
  }
  dbname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:svr.QueryDBAgentReq.dbname)
}
inline ::std::string* QueryDBAgentReq::mutable_dbname() {
  set_has_dbname();
  if (dbname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:svr.QueryDBAgentReq.dbname)
  return dbname_;
}
inline ::std::string* QueryDBAgentReq::release_dbname() {
  clear_has_dbname();
  if (dbname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = dbname_;
    dbname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void QueryDBAgentReq::set_allocated_dbname(::std::string* dbname) {
  if (dbname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete dbname_;
  }
  if (dbname) {
    set_has_dbname();
    dbname_ = dbname;
  } else {
    clear_has_dbname();
    dbname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:svr.QueryDBAgentReq.dbname)
}

// optional string statement = 4;
inline bool QueryDBAgentReq::has_statement() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QueryDBAgentReq::set_has_statement() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QueryDBAgentReq::clear_has_statement() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QueryDBAgentReq::clear_statement() {
  if (statement_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    statement_->clear();
  }
  clear_has_statement();
}
inline const ::std::string& QueryDBAgentReq::statement() const {
  // @@protoc_insertion_point(field_get:svr.QueryDBAgentReq.statement)
  return *statement_;
}
inline void QueryDBAgentReq::set_statement(const ::std::string& value) {
  set_has_statement();
  if (statement_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    statement_ = new ::std::string;
  }
  statement_->assign(value);
  // @@protoc_insertion_point(field_set:svr.QueryDBAgentReq.statement)
}
inline void QueryDBAgentReq::set_statement(const char* value) {
  set_has_statement();
  if (statement_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    statement_ = new ::std::string;
  }
  statement_->assign(value);
  // @@protoc_insertion_point(field_set_char:svr.QueryDBAgentReq.statement)
}
inline void QueryDBAgentReq::set_statement(const char* value, size_t size) {
  set_has_statement();
  if (statement_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    statement_ = new ::std::string;
  }
  statement_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:svr.QueryDBAgentReq.statement)
}
inline ::std::string* QueryDBAgentReq::mutable_statement() {
  set_has_statement();
  if (statement_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    statement_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:svr.QueryDBAgentReq.statement)
  return statement_;
}
inline ::std::string* QueryDBAgentReq::release_statement() {
  clear_has_statement();
  if (statement_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = statement_;
    statement_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void QueryDBAgentReq::set_allocated_statement(::std::string* statement) {
  if (statement_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete statement_;
  }
  if (statement) {
    set_has_statement();
    statement_ = statement;
  } else {
    clear_has_statement();
    statement_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:svr.QueryDBAgentReq.statement)
}

// -------------------------------------------------------------------

// QueryDBAgentRsp

// required uint32 sequence = 1;
inline bool QueryDBAgentRsp::has_sequence() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryDBAgentRsp::set_has_sequence() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryDBAgentRsp::clear_has_sequence() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryDBAgentRsp::clear_sequence() {
  sequence_ = 0u;
  clear_has_sequence();
}
inline ::google::protobuf::uint32 QueryDBAgentRsp::sequence() const {
  // @@protoc_insertion_point(field_get:svr.QueryDBAgentRsp.sequence)
  return sequence_;
}
inline void QueryDBAgentRsp::set_sequence(::google::protobuf::uint32 value) {
  set_has_sequence();
  sequence_ = value;
  // @@protoc_insertion_point(field_set:svr.QueryDBAgentRsp.sequence)
}

// optional bytes result = 2;
inline bool QueryDBAgentRsp::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryDBAgentRsp::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryDBAgentRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryDBAgentRsp::clear_result() {
  if (result_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    result_->clear();
  }
  clear_has_result();
}
inline const ::std::string& QueryDBAgentRsp::result() const {
  // @@protoc_insertion_point(field_get:svr.QueryDBAgentRsp.result)
  return *result_;
}
inline void QueryDBAgentRsp::set_result(const ::std::string& value) {
  set_has_result();
  if (result_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    result_ = new ::std::string;
  }
  result_->assign(value);
  // @@protoc_insertion_point(field_set:svr.QueryDBAgentRsp.result)
}
inline void QueryDBAgentRsp::set_result(const char* value) {
  set_has_result();
  if (result_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    result_ = new ::std::string;
  }
  result_->assign(value);
  // @@protoc_insertion_point(field_set_char:svr.QueryDBAgentRsp.result)
}
inline void QueryDBAgentRsp::set_result(const void* value, size_t size) {
  set_has_result();
  if (result_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    result_ = new ::std::string;
  }
  result_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:svr.QueryDBAgentRsp.result)
}
inline ::std::string* QueryDBAgentRsp::mutable_result() {
  set_has_result();
  if (result_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    result_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:svr.QueryDBAgentRsp.result)
  return result_;
}
inline ::std::string* QueryDBAgentRsp::release_result() {
  clear_has_result();
  if (result_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = result_;
    result_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void QueryDBAgentRsp::set_allocated_result(::std::string* result) {
  if (result_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete result_;
  }
  if (result) {
    set_has_result();
    result_ = result;
  } else {
    clear_has_result();
    result_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:svr.QueryDBAgentRsp.result)
}

// -------------------------------------------------------------------

// DBErrorRsp

// required uint32 sequence = 1;
inline bool DBErrorRsp::has_sequence() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBErrorRsp::set_has_sequence() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBErrorRsp::clear_has_sequence() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBErrorRsp::clear_sequence() {
  sequence_ = 0u;
  clear_has_sequence();
}
inline ::google::protobuf::uint32 DBErrorRsp::sequence() const {
  // @@protoc_insertion_point(field_get:svr.DBErrorRsp.sequence)
  return sequence_;
}
inline void DBErrorRsp::set_sequence(::google::protobuf::uint32 value) {
  set_has_sequence();
  sequence_ = value;
  // @@protoc_insertion_point(field_set:svr.DBErrorRsp.sequence)
}

// required int32 error_code = 2;
inline bool DBErrorRsp::has_error_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBErrorRsp::set_has_error_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBErrorRsp::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBErrorRsp::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
inline ::google::protobuf::int32 DBErrorRsp::error_code() const {
  // @@protoc_insertion_point(field_get:svr.DBErrorRsp.error_code)
  return error_code_;
}
inline void DBErrorRsp::set_error_code(::google::protobuf::int32 value) {
  set_has_error_code();
  error_code_ = value;
  // @@protoc_insertion_point(field_set:svr.DBErrorRsp.error_code)
}

// optional string what = 3;
inline bool DBErrorRsp::has_what() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DBErrorRsp::set_has_what() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DBErrorRsp::clear_has_what() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DBErrorRsp::clear_what() {
  if (what_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    what_->clear();
  }
  clear_has_what();
}
inline const ::std::string& DBErrorRsp::what() const {
  // @@protoc_insertion_point(field_get:svr.DBErrorRsp.what)
  return *what_;
}
inline void DBErrorRsp::set_what(const ::std::string& value) {
  set_has_what();
  if (what_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    what_ = new ::std::string;
  }
  what_->assign(value);
  // @@protoc_insertion_point(field_set:svr.DBErrorRsp.what)
}
inline void DBErrorRsp::set_what(const char* value) {
  set_has_what();
  if (what_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    what_ = new ::std::string;
  }
  what_->assign(value);
  // @@protoc_insertion_point(field_set_char:svr.DBErrorRsp.what)
}
inline void DBErrorRsp::set_what(const char* value, size_t size) {
  set_has_what();
  if (what_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    what_ = new ::std::string;
  }
  what_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:svr.DBErrorRsp.what)
}
inline ::std::string* DBErrorRsp::mutable_what() {
  set_has_what();
  if (what_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    what_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:svr.DBErrorRsp.what)
  return what_;
}
inline ::std::string* DBErrorRsp::release_what() {
  clear_has_what();
  if (what_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = what_;
    what_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DBErrorRsp::set_allocated_what(::std::string* what) {
  if (what_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete what_;
  }
  if (what) {
    set_has_what();
    what_ = what;
  } else {
    clear_has_what();
    what_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:svr.DBErrorRsp.what)
}

// -------------------------------------------------------------------

// DBAgentErrorRsp

// required .pub.ErrorCode error_code = 1;
inline bool DBAgentErrorRsp::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBAgentErrorRsp::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBAgentErrorRsp::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBAgentErrorRsp::clear_error_code() {
  error_code_ = 10001;
  clear_has_error_code();
}
inline ::pub::ErrorCode DBAgentErrorRsp::error_code() const {
  // @@protoc_insertion_point(field_get:svr.DBAgentErrorRsp.error_code)
  return static_cast< ::pub::ErrorCode >(error_code_);
}
inline void DBAgentErrorRsp::set_error_code(::pub::ErrorCode value) {
  assert(::pub::ErrorCode_IsValid(value));
  set_has_error_code();
  error_code_ = value;
  // @@protoc_insertion_point(field_set:svr.DBAgentErrorRsp.error_code)
}

// optional uint32 sequence = 2;
inline bool DBAgentErrorRsp::has_sequence() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBAgentErrorRsp::set_has_sequence() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBAgentErrorRsp::clear_has_sequence() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBAgentErrorRsp::clear_sequence() {
  sequence_ = 0u;
  clear_has_sequence();
}
inline ::google::protobuf::uint32 DBAgentErrorRsp::sequence() const {
  // @@protoc_insertion_point(field_get:svr.DBAgentErrorRsp.sequence)
  return sequence_;
}
inline void DBAgentErrorRsp::set_sequence(::google::protobuf::uint32 value) {
  set_has_sequence();
  sequence_ = value;
  // @@protoc_insertion_point(field_set:svr.DBAgentErrorRsp.sequence)
}

// -------------------------------------------------------------------

// ChildNode

// required .svr.NodeType type = 1;
inline bool ChildNode::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChildNode::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChildNode::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChildNode::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::svr::NodeType ChildNode::type() const {
  // @@protoc_insertion_point(field_get:svr.ChildNode.type)
  return static_cast< ::svr::NodeType >(type_);
}
inline void ChildNode::set_type(::svr::NodeType value) {
  assert(::svr::NodeType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:svr.ChildNode.type)
}

// optional uint32 child_id = 2 [default = 1];
inline bool ChildNode::has_child_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChildNode::set_has_child_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChildNode::clear_has_child_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChildNode::clear_child_id() {
  child_id_ = 1u;
  clear_has_child_id();
}
inline ::google::protobuf::uint32 ChildNode::child_id() const {
  // @@protoc_insertion_point(field_get:svr.ChildNode.child_id)
  return child_id_;
}
inline void ChildNode::set_child_id(::google::protobuf::uint32 value) {
  set_has_child_id();
  child_id_ = value;
  // @@protoc_insertion_point(field_set:svr.ChildNode.child_id)
}

// -------------------------------------------------------------------

// LoginGWReq

// required .svr.ChildNode node = 1;
inline bool LoginGWReq::has_node() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginGWReq::set_has_node() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginGWReq::clear_has_node() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginGWReq::clear_node() {
  if (node_ != NULL) node_->::svr::ChildNode::Clear();
  clear_has_node();
}
inline const ::svr::ChildNode& LoginGWReq::node() const {
  // @@protoc_insertion_point(field_get:svr.LoginGWReq.node)
  return node_ != NULL ? *node_ : *default_instance_->node_;
}
inline ::svr::ChildNode* LoginGWReq::mutable_node() {
  set_has_node();
  if (node_ == NULL) node_ = new ::svr::ChildNode;
  // @@protoc_insertion_point(field_mutable:svr.LoginGWReq.node)
  return node_;
}
inline ::svr::ChildNode* LoginGWReq::release_node() {
  clear_has_node();
  ::svr::ChildNode* temp = node_;
  node_ = NULL;
  return temp;
}
inline void LoginGWReq::set_allocated_node(::svr::ChildNode* node) {
  delete node_;
  node_ = node;
  if (node) {
    set_has_node();
  } else {
    clear_has_node();
  }
  // @@protoc_insertion_point(field_set_allocated:svr.LoginGWReq.node)
}

// -------------------------------------------------------------------

// LoginGWRsp

// required uint32 heartbeat_interval = 1;
inline bool LoginGWRsp::has_heartbeat_interval() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginGWRsp::set_has_heartbeat_interval() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginGWRsp::clear_has_heartbeat_interval() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginGWRsp::clear_heartbeat_interval() {
  heartbeat_interval_ = 0u;
  clear_has_heartbeat_interval();
}
inline ::google::protobuf::uint32 LoginGWRsp::heartbeat_interval() const {
  // @@protoc_insertion_point(field_get:svr.LoginGWRsp.heartbeat_interval)
  return heartbeat_interval_;
}
inline void LoginGWRsp::set_heartbeat_interval(::google::protobuf::uint32 value) {
  set_has_heartbeat_interval();
  heartbeat_interval_ = value;
  // @@protoc_insertion_point(field_set:svr.LoginGWRsp.heartbeat_interval)
}

// -------------------------------------------------------------------

// GWInfoReq

// -------------------------------------------------------------------

// GWInfoRsp

// required uint32 up_volume = 1;
inline bool GWInfoRsp::has_up_volume() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GWInfoRsp::set_has_up_volume() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GWInfoRsp::clear_has_up_volume() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GWInfoRsp::clear_up_volume() {
  up_volume_ = 0u;
  clear_has_up_volume();
}
inline ::google::protobuf::uint32 GWInfoRsp::up_volume() const {
  // @@protoc_insertion_point(field_get:svr.GWInfoRsp.up_volume)
  return up_volume_;
}
inline void GWInfoRsp::set_up_volume(::google::protobuf::uint32 value) {
  set_has_up_volume();
  up_volume_ = value;
  // @@protoc_insertion_point(field_set:svr.GWInfoRsp.up_volume)
}

// required uint32 down_volume = 2;
inline bool GWInfoRsp::has_down_volume() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GWInfoRsp::set_has_down_volume() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GWInfoRsp::clear_has_down_volume() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GWInfoRsp::clear_down_volume() {
  down_volume_ = 0u;
  clear_has_down_volume();
}
inline ::google::protobuf::uint32 GWInfoRsp::down_volume() const {
  // @@protoc_insertion_point(field_get:svr.GWInfoRsp.down_volume)
  return down_volume_;
}
inline void GWInfoRsp::set_down_volume(::google::protobuf::uint32 value) {
  set_has_down_volume();
  down_volume_ = value;
  // @@protoc_insertion_point(field_set:svr.GWInfoRsp.down_volume)
}

// repeated .svr.ChildNode node_lists = 3;
inline int GWInfoRsp::node_lists_size() const {
  return node_lists_.size();
}
inline void GWInfoRsp::clear_node_lists() {
  node_lists_.Clear();
}
inline const ::svr::ChildNode& GWInfoRsp::node_lists(int index) const {
  // @@protoc_insertion_point(field_get:svr.GWInfoRsp.node_lists)
  return node_lists_.Get(index);
}
inline ::svr::ChildNode* GWInfoRsp::mutable_node_lists(int index) {
  // @@protoc_insertion_point(field_mutable:svr.GWInfoRsp.node_lists)
  return node_lists_.Mutable(index);
}
inline ::svr::ChildNode* GWInfoRsp::add_node_lists() {
  // @@protoc_insertion_point(field_add:svr.GWInfoRsp.node_lists)
  return node_lists_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::svr::ChildNode >&
GWInfoRsp::node_lists() const {
  // @@protoc_insertion_point(field_list:svr.GWInfoRsp.node_lists)
  return node_lists_;
}
inline ::google::protobuf::RepeatedPtrField< ::svr::ChildNode >*
GWInfoRsp::mutable_node_lists() {
  // @@protoc_insertion_point(field_mutable_list:svr.GWInfoRsp.node_lists)
  return &node_lists_;
}

// -------------------------------------------------------------------

// ForwardReq

// required .svr.ChildNode dst = 1;
inline bool ForwardReq::has_dst() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ForwardReq::set_has_dst() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ForwardReq::clear_has_dst() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ForwardReq::clear_dst() {
  if (dst_ != NULL) dst_->::svr::ChildNode::Clear();
  clear_has_dst();
}
inline const ::svr::ChildNode& ForwardReq::dst() const {
  // @@protoc_insertion_point(field_get:svr.ForwardReq.dst)
  return dst_ != NULL ? *dst_ : *default_instance_->dst_;
}
inline ::svr::ChildNode* ForwardReq::mutable_dst() {
  set_has_dst();
  if (dst_ == NULL) dst_ = new ::svr::ChildNode;
  // @@protoc_insertion_point(field_mutable:svr.ForwardReq.dst)
  return dst_;
}
inline ::svr::ChildNode* ForwardReq::release_dst() {
  clear_has_dst();
  ::svr::ChildNode* temp = dst_;
  dst_ = NULL;
  return temp;
}
inline void ForwardReq::set_allocated_dst(::svr::ChildNode* dst) {
  delete dst_;
  dst_ = dst;
  if (dst) {
    set_has_dst();
  } else {
    clear_has_dst();
  }
  // @@protoc_insertion_point(field_set_allocated:svr.ForwardReq.dst)
}

// required bytes user_data = 2;
inline bool ForwardReq::has_user_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ForwardReq::set_has_user_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ForwardReq::clear_has_user_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ForwardReq::clear_user_data() {
  if (user_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_data_->clear();
  }
  clear_has_user_data();
}
inline const ::std::string& ForwardReq::user_data() const {
  // @@protoc_insertion_point(field_get:svr.ForwardReq.user_data)
  return *user_data_;
}
inline void ForwardReq::set_user_data(const ::std::string& value) {
  set_has_user_data();
  if (user_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_data_ = new ::std::string;
  }
  user_data_->assign(value);
  // @@protoc_insertion_point(field_set:svr.ForwardReq.user_data)
}
inline void ForwardReq::set_user_data(const char* value) {
  set_has_user_data();
  if (user_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_data_ = new ::std::string;
  }
  user_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:svr.ForwardReq.user_data)
}
inline void ForwardReq::set_user_data(const void* value, size_t size) {
  set_has_user_data();
  if (user_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_data_ = new ::std::string;
  }
  user_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:svr.ForwardReq.user_data)
}
inline ::std::string* ForwardReq::mutable_user_data() {
  set_has_user_data();
  if (user_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:svr.ForwardReq.user_data)
  return user_data_;
}
inline ::std::string* ForwardReq::release_user_data() {
  clear_has_user_data();
  if (user_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = user_data_;
    user_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ForwardReq::set_allocated_user_data(::std::string* user_data) {
  if (user_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_data_;
  }
  if (user_data) {
    set_has_user_data();
    user_data_ = user_data;
  } else {
    clear_has_user_data();
    user_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:svr.ForwardReq.user_data)
}

// -------------------------------------------------------------------

// BroadcastReq

// repeated .svr.NodeType dst_lists = 1;
inline int BroadcastReq::dst_lists_size() const {
  return dst_lists_.size();
}
inline void BroadcastReq::clear_dst_lists() {
  dst_lists_.Clear();
}
inline ::svr::NodeType BroadcastReq::dst_lists(int index) const {
  // @@protoc_insertion_point(field_get:svr.BroadcastReq.dst_lists)
  return static_cast< ::svr::NodeType >(dst_lists_.Get(index));
}
inline void BroadcastReq::set_dst_lists(int index, ::svr::NodeType value) {
  assert(::svr::NodeType_IsValid(value));
  dst_lists_.Set(index, value);
  // @@protoc_insertion_point(field_set:svr.BroadcastReq.dst_lists)
}
inline void BroadcastReq::add_dst_lists(::svr::NodeType value) {
  assert(::svr::NodeType_IsValid(value));
  dst_lists_.Add(value);
  // @@protoc_insertion_point(field_add:svr.BroadcastReq.dst_lists)
}
inline const ::google::protobuf::RepeatedField<int>&
BroadcastReq::dst_lists() const {
  // @@protoc_insertion_point(field_list:svr.BroadcastReq.dst_lists)
  return dst_lists_;
}
inline ::google::protobuf::RepeatedField<int>*
BroadcastReq::mutable_dst_lists() {
  // @@protoc_insertion_point(field_mutable_list:svr.BroadcastReq.dst_lists)
  return &dst_lists_;
}

// required bytes user_data = 2;
inline bool BroadcastReq::has_user_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BroadcastReq::set_has_user_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BroadcastReq::clear_has_user_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BroadcastReq::clear_user_data() {
  if (user_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_data_->clear();
  }
  clear_has_user_data();
}
inline const ::std::string& BroadcastReq::user_data() const {
  // @@protoc_insertion_point(field_get:svr.BroadcastReq.user_data)
  return *user_data_;
}
inline void BroadcastReq::set_user_data(const ::std::string& value) {
  set_has_user_data();
  if (user_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_data_ = new ::std::string;
  }
  user_data_->assign(value);
  // @@protoc_insertion_point(field_set:svr.BroadcastReq.user_data)
}
inline void BroadcastReq::set_user_data(const char* value) {
  set_has_user_data();
  if (user_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_data_ = new ::std::string;
  }
  user_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:svr.BroadcastReq.user_data)
}
inline void BroadcastReq::set_user_data(const void* value, size_t size) {
  set_has_user_data();
  if (user_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_data_ = new ::std::string;
  }
  user_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:svr.BroadcastReq.user_data)
}
inline ::std::string* BroadcastReq::mutable_user_data() {
  set_has_user_data();
  if (user_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:svr.BroadcastReq.user_data)
  return user_data_;
}
inline ::std::string* BroadcastReq::release_user_data() {
  clear_has_user_data();
  if (user_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = user_data_;
    user_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BroadcastReq::set_allocated_user_data(::std::string* user_data) {
  if (user_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_data_;
  }
  if (user_data) {
    set_has_user_data();
    user_data_ = user_data;
  } else {
    clear_has_user_data();
    user_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:svr.BroadcastReq.user_data)
}

// -------------------------------------------------------------------

// GWNotify

// required .svr.ChildNode src = 1;
inline bool GWNotify::has_src() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GWNotify::set_has_src() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GWNotify::clear_has_src() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GWNotify::clear_src() {
  if (src_ != NULL) src_->::svr::ChildNode::Clear();
  clear_has_src();
}
inline const ::svr::ChildNode& GWNotify::src() const {
  // @@protoc_insertion_point(field_get:svr.GWNotify.src)
  return src_ != NULL ? *src_ : *default_instance_->src_;
}
inline ::svr::ChildNode* GWNotify::mutable_src() {
  set_has_src();
  if (src_ == NULL) src_ = new ::svr::ChildNode;
  // @@protoc_insertion_point(field_mutable:svr.GWNotify.src)
  return src_;
}
inline ::svr::ChildNode* GWNotify::release_src() {
  clear_has_src();
  ::svr::ChildNode* temp = src_;
  src_ = NULL;
  return temp;
}
inline void GWNotify::set_allocated_src(::svr::ChildNode* src) {
  delete src_;
  src_ = src;
  if (src) {
    set_has_src();
  } else {
    clear_has_src();
  }
  // @@protoc_insertion_point(field_set_allocated:svr.GWNotify.src)
}

// required bytes user_data = 2;
inline bool GWNotify::has_user_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GWNotify::set_has_user_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GWNotify::clear_has_user_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GWNotify::clear_user_data() {
  if (user_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_data_->clear();
  }
  clear_has_user_data();
}
inline const ::std::string& GWNotify::user_data() const {
  // @@protoc_insertion_point(field_get:svr.GWNotify.user_data)
  return *user_data_;
}
inline void GWNotify::set_user_data(const ::std::string& value) {
  set_has_user_data();
  if (user_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_data_ = new ::std::string;
  }
  user_data_->assign(value);
  // @@protoc_insertion_point(field_set:svr.GWNotify.user_data)
}
inline void GWNotify::set_user_data(const char* value) {
  set_has_user_data();
  if (user_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_data_ = new ::std::string;
  }
  user_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:svr.GWNotify.user_data)
}
inline void GWNotify::set_user_data(const void* value, size_t size) {
  set_has_user_data();
  if (user_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_data_ = new ::std::string;
  }
  user_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:svr.GWNotify.user_data)
}
inline ::std::string* GWNotify::mutable_user_data() {
  set_has_user_data();
  if (user_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:svr.GWNotify.user_data)
  return user_data_;
}
inline ::std::string* GWNotify::release_user_data() {
  clear_has_user_data();
  if (user_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = user_data_;
    user_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GWNotify::set_allocated_user_data(::std::string* user_data) {
  if (user_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_data_;
  }
  if (user_data) {
    set_has_user_data();
    user_data_ = user_data;
  } else {
    clear_has_user_data();
    user_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:svr.GWNotify.user_data)
}

// -------------------------------------------------------------------

// LinkerLoginReq

// required uint32 partition_id = 1;
inline bool LinkerLoginReq::has_partition_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LinkerLoginReq::set_has_partition_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LinkerLoginReq::clear_has_partition_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LinkerLoginReq::clear_partition_id() {
  partition_id_ = 0u;
  clear_has_partition_id();
}
inline ::google::protobuf::uint32 LinkerLoginReq::partition_id() const {
  // @@protoc_insertion_point(field_get:svr.LinkerLoginReq.partition_id)
  return partition_id_;
}
inline void LinkerLoginReq::set_partition_id(::google::protobuf::uint32 value) {
  set_has_partition_id();
  partition_id_ = value;
  // @@protoc_insertion_point(field_set:svr.LinkerLoginReq.partition_id)
}

// required string public_ip = 2;
inline bool LinkerLoginReq::has_public_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LinkerLoginReq::set_has_public_ip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LinkerLoginReq::clear_has_public_ip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LinkerLoginReq::clear_public_ip() {
  if (public_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    public_ip_->clear();
  }
  clear_has_public_ip();
}
inline const ::std::string& LinkerLoginReq::public_ip() const {
  // @@protoc_insertion_point(field_get:svr.LinkerLoginReq.public_ip)
  return *public_ip_;
}
inline void LinkerLoginReq::set_public_ip(const ::std::string& value) {
  set_has_public_ip();
  if (public_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    public_ip_ = new ::std::string;
  }
  public_ip_->assign(value);
  // @@protoc_insertion_point(field_set:svr.LinkerLoginReq.public_ip)
}
inline void LinkerLoginReq::set_public_ip(const char* value) {
  set_has_public_ip();
  if (public_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    public_ip_ = new ::std::string;
  }
  public_ip_->assign(value);
  // @@protoc_insertion_point(field_set_char:svr.LinkerLoginReq.public_ip)
}
inline void LinkerLoginReq::set_public_ip(const char* value, size_t size) {
  set_has_public_ip();
  if (public_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    public_ip_ = new ::std::string;
  }
  public_ip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:svr.LinkerLoginReq.public_ip)
}
inline ::std::string* LinkerLoginReq::mutable_public_ip() {
  set_has_public_ip();
  if (public_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    public_ip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:svr.LinkerLoginReq.public_ip)
  return public_ip_;
}
inline ::std::string* LinkerLoginReq::release_public_ip() {
  clear_has_public_ip();
  if (public_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = public_ip_;
    public_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LinkerLoginReq::set_allocated_public_ip(::std::string* public_ip) {
  if (public_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete public_ip_;
  }
  if (public_ip) {
    set_has_public_ip();
    public_ip_ = public_ip;
  } else {
    clear_has_public_ip();
    public_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:svr.LinkerLoginReq.public_ip)
}

// required uint32 port = 3;
inline bool LinkerLoginReq::has_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LinkerLoginReq::set_has_port() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LinkerLoginReq::clear_has_port() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LinkerLoginReq::clear_port() {
  port_ = 0u;
  clear_has_port();
}
inline ::google::protobuf::uint32 LinkerLoginReq::port() const {
  // @@protoc_insertion_point(field_get:svr.LinkerLoginReq.port)
  return port_;
}
inline void LinkerLoginReq::set_port(::google::protobuf::uint32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:svr.LinkerLoginReq.port)
}

// optional uint32 linker_id = 4;
inline bool LinkerLoginReq::has_linker_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LinkerLoginReq::set_has_linker_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LinkerLoginReq::clear_has_linker_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LinkerLoginReq::clear_linker_id() {
  linker_id_ = 0u;
  clear_has_linker_id();
}
inline ::google::protobuf::uint32 LinkerLoginReq::linker_id() const {
  // @@protoc_insertion_point(field_get:svr.LinkerLoginReq.linker_id)
  return linker_id_;
}
inline void LinkerLoginReq::set_linker_id(::google::protobuf::uint32 value) {
  set_has_linker_id();
  linker_id_ = value;
  // @@protoc_insertion_point(field_set:svr.LinkerLoginReq.linker_id)
}

// -------------------------------------------------------------------

// LinkerLoginRsp

// required uint32 heartbeat_interval = 1;
inline bool LinkerLoginRsp::has_heartbeat_interval() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LinkerLoginRsp::set_has_heartbeat_interval() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LinkerLoginRsp::clear_has_heartbeat_interval() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LinkerLoginRsp::clear_heartbeat_interval() {
  heartbeat_interval_ = 0u;
  clear_has_heartbeat_interval();
}
inline ::google::protobuf::uint32 LinkerLoginRsp::heartbeat_interval() const {
  // @@protoc_insertion_point(field_get:svr.LinkerLoginRsp.heartbeat_interval)
  return heartbeat_interval_;
}
inline void LinkerLoginRsp::set_heartbeat_interval(::google::protobuf::uint32 value) {
  set_has_heartbeat_interval();
  heartbeat_interval_ = value;
  // @@protoc_insertion_point(field_set:svr.LinkerLoginRsp.heartbeat_interval)
}

// required uint32 linker_id = 2;
inline bool LinkerLoginRsp::has_linker_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LinkerLoginRsp::set_has_linker_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LinkerLoginRsp::clear_has_linker_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LinkerLoginRsp::clear_linker_id() {
  linker_id_ = 0u;
  clear_has_linker_id();
}
inline ::google::protobuf::uint32 LinkerLoginRsp::linker_id() const {
  // @@protoc_insertion_point(field_get:svr.LinkerLoginRsp.linker_id)
  return linker_id_;
}
inline void LinkerLoginRsp::set_linker_id(::google::protobuf::uint32 value) {
  set_has_linker_id();
  linker_id_ = value;
  // @@protoc_insertion_point(field_set:svr.LinkerLoginRsp.linker_id)
}

// -------------------------------------------------------------------

// ReportLinkerReq

// required uint32 load = 1;
inline bool ReportLinkerReq::has_load() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReportLinkerReq::set_has_load() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReportLinkerReq::clear_has_load() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReportLinkerReq::clear_load() {
  load_ = 0u;
  clear_has_load();
}
inline ::google::protobuf::uint32 ReportLinkerReq::load() const {
  // @@protoc_insertion_point(field_get:svr.ReportLinkerReq.load)
  return load_;
}
inline void ReportLinkerReq::set_load(::google::protobuf::uint32 value) {
  set_has_load();
  load_ = value;
  // @@protoc_insertion_point(field_set:svr.ReportLinkerReq.load)
}

// -------------------------------------------------------------------

// UserEnterRsp

// required uint32 user_id = 1;
inline bool UserEnterRsp::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserEnterRsp::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserEnterRsp::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserEnterRsp::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 UserEnterRsp::user_id() const {
  // @@protoc_insertion_point(field_get:svr.UserEnterRsp.user_id)
  return user_id_;
}
inline void UserEnterRsp::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:svr.UserEnterRsp.user_id)
}

// -------------------------------------------------------------------

// UserLeaveRsp

// required uint32 user_id = 1;
inline bool UserLeaveRsp::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserLeaveRsp::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserLeaveRsp::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserLeaveRsp::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 UserLeaveRsp::user_id() const {
  // @@protoc_insertion_point(field_get:svr.UserLeaveRsp.user_id)
  return user_id_;
}
inline void UserLeaveRsp::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:svr.UserLeaveRsp.user_id)
}

// -------------------------------------------------------------------

// DisconnectReq

// -------------------------------------------------------------------

// LinkerForward

// required uint32 user_id = 1;
inline bool LinkerForward::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LinkerForward::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LinkerForward::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LinkerForward::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 LinkerForward::user_id() const {
  // @@protoc_insertion_point(field_get:svr.LinkerForward.user_id)
  return user_id_;
}
inline void LinkerForward::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:svr.LinkerForward.user_id)
}

// required bytes user_data = 2;
inline bool LinkerForward::has_user_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LinkerForward::set_has_user_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LinkerForward::clear_has_user_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LinkerForward::clear_user_data() {
  if (user_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_data_->clear();
  }
  clear_has_user_data();
}
inline const ::std::string& LinkerForward::user_data() const {
  // @@protoc_insertion_point(field_get:svr.LinkerForward.user_data)
  return *user_data_;
}
inline void LinkerForward::set_user_data(const ::std::string& value) {
  set_has_user_data();
  if (user_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_data_ = new ::std::string;
  }
  user_data_->assign(value);
  // @@protoc_insertion_point(field_set:svr.LinkerForward.user_data)
}
inline void LinkerForward::set_user_data(const char* value) {
  set_has_user_data();
  if (user_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_data_ = new ::std::string;
  }
  user_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:svr.LinkerForward.user_data)
}
inline void LinkerForward::set_user_data(const void* value, size_t size) {
  set_has_user_data();
  if (user_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_data_ = new ::std::string;
  }
  user_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:svr.LinkerForward.user_data)
}
inline ::std::string* LinkerForward::mutable_user_data() {
  set_has_user_data();
  if (user_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:svr.LinkerForward.user_data)
  return user_data_;
}
inline ::std::string* LinkerForward::release_user_data() {
  clear_has_user_data();
  if (user_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = user_data_;
    user_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LinkerForward::set_allocated_user_data(::std::string* user_data) {
  if (user_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_data_;
  }
  if (user_data) {
    set_has_user_data();
    user_data_ = user_data;
  } else {
    clear_has_user_data();
    user_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:svr.LinkerForward.user_data)
}

// -------------------------------------------------------------------

// LinkerBroadcast

// required bytes user_data = 1;
inline bool LinkerBroadcast::has_user_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LinkerBroadcast::set_has_user_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LinkerBroadcast::clear_has_user_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LinkerBroadcast::clear_user_data() {
  if (user_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_data_->clear();
  }
  clear_has_user_data();
}
inline const ::std::string& LinkerBroadcast::user_data() const {
  // @@protoc_insertion_point(field_get:svr.LinkerBroadcast.user_data)
  return *user_data_;
}
inline void LinkerBroadcast::set_user_data(const ::std::string& value) {
  set_has_user_data();
  if (user_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_data_ = new ::std::string;
  }
  user_data_->assign(value);
  // @@protoc_insertion_point(field_set:svr.LinkerBroadcast.user_data)
}
inline void LinkerBroadcast::set_user_data(const char* value) {
  set_has_user_data();
  if (user_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_data_ = new ::std::string;
  }
  user_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:svr.LinkerBroadcast.user_data)
}
inline void LinkerBroadcast::set_user_data(const void* value, size_t size) {
  set_has_user_data();
  if (user_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_data_ = new ::std::string;
  }
  user_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:svr.LinkerBroadcast.user_data)
}
inline ::std::string* LinkerBroadcast::mutable_user_data() {
  set_has_user_data();
  if (user_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:svr.LinkerBroadcast.user_data)
  return user_data_;
}
inline ::std::string* LinkerBroadcast::release_user_data() {
  clear_has_user_data();
  if (user_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = user_data_;
    user_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LinkerBroadcast::set_allocated_user_data(::std::string* user_data) {
  if (user_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_data_;
  }
  if (user_data) {
    set_has_user_data();
    user_data_ = user_data;
  } else {
    clear_has_user_data();
    user_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:svr.LinkerBroadcast.user_data)
}

// -------------------------------------------------------------------

// UpdateTokenReq

// required uint32 user_id = 1;
inline bool UpdateTokenReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateTokenReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateTokenReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateTokenReq::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 UpdateTokenReq::user_id() const {
  // @@protoc_insertion_point(field_get:svr.UpdateTokenReq.user_id)
  return user_id_;
}
inline void UpdateTokenReq::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:svr.UpdateTokenReq.user_id)
}

// required uint64 token = 2;
inline bool UpdateTokenReq::has_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateTokenReq::set_has_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateTokenReq::clear_has_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateTokenReq::clear_token() {
  token_ = GOOGLE_ULONGLONG(0);
  clear_has_token();
}
inline ::google::protobuf::uint64 UpdateTokenReq::token() const {
  // @@protoc_insertion_point(field_get:svr.UpdateTokenReq.token)
  return token_;
}
inline void UpdateTokenReq::set_token(::google::protobuf::uint64 value) {
  set_has_token();
  token_ = value;
  // @@protoc_insertion_point(field_set:svr.UpdateTokenReq.token)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace svr

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::svr::QueryDBAgentReq_ActoinType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::svr::QueryDBAgentReq_ActoinType>() {
  return ::svr::QueryDBAgentReq_ActoinType_descriptor();
}
template <> struct is_proto_enum< ::svr::NodeType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::svr::NodeType>() {
  return ::svr::NodeType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_2fserver_5finternal_2eproto__INCLUDED
